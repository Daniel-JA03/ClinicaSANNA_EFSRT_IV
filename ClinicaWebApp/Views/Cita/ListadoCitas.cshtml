@model IEnumerable<ClinicaWebApp.Models.Cita.Cita>

@{
    ViewData["Title"] = "ListadoCitas";
    Layout = "~/Views/Shared/_LayoutRecepcionista.cshtml";
}

<h1>Listado de Citas</h1>
<hr>

<div class="card shadow mb-4">

    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Filtrar Por Fecha</h6>

        <br>

        <div class="d-flex flex-row">
            <form method="get" asp-action="ListadoCitas" class="d-flex align-items-center"
                  style="max-width: 600px; width: 100%;">
                <!-- Campos de fecha en fila -->
                <div class="form-group mb-0 mr-2">

                    <input type="number" id="dia" name="dia" class="form-control form-control-sm" min="1" max="31"
                           value="@ViewBag.Dia" placeholder="Día"/>
                </div>
                <div class="form-group mb-0 mr-2">

                    <input type="number" id="mes" name="mes" class="form-control form-control-sm" min="1" max="12"
                           value="@ViewBag.Mes" placeholder="Mes"/>
                </div>
                <div class="form-group mb-0 mr-2">

                    <input type="number" id="año" name="año" class="form-control form-control-sm" min="2000" max="@DateTime.Now.ToString("yyyy")"
                           value="@ViewBag.Año" placeholder="Año"/>
                </div>

                <!-- Botón de filtro a la derecha -->
                <button type="submit" class="btn btn-primary btn-sm">Filtrar</button>
            </form>
        </div>
    </div>

    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.IdCita)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CalendarioCita)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Consultorio)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.NombreMedico)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.NombrePaciente)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MontoPago)
                    </th>
                    <th>ACCIONES</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.IdCita)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CalendarioCita)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Consultorio)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NombreMedico)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NombrePaciente)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MontoPago)
                        </td>
                        <td>
                            <a href="@Url.Action("actualizarCita", new { id = item.IdCita })"
                               class="btn btn-warning me-2">
                                <i class="fas fa-edit"></i>
                            </a>
                                <button type="button" class="btn btn-danger btn-eliminar"
                                        data-url="@Url.Action("eliminarCita", new { id = item.IdCita })">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const botonesEliminar = document.querySelectorAll('.btn-eliminar');

            botonesEliminar.forEach(boton => {
                boton.addEventListener('click', function (event) {
                    const urlEliminar = this.getAttribute('data-url');

                    Swal.fire({
                        title: '¿Estás seguro?',
                        text: "¡No podrás revertir esta acción!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Sí, eliminar',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Envía una solicitud POST usando Fetch
                            fetch(urlEliminar, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'X-Requested-With': 'XMLHttpRequest' // Opcional, para indicar que es una solicitud AJAX
                                }
                            })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Error al eliminar la cita.');
                                }
                                return response.json();
                            })
                            .then(data => {
                                // Actualiza la página después de la eliminación exitosa
                                Swal.fire(
                                    'Eliminado!',
                                    'La cita ha sido eliminada correctamente.',
                                    'success'
                                ).then(() => {
                                    // Recarga la página o realiza otra acción
                                    location.reload();
                                });
                            })
                            .catch(error => {
                                Swal.fire(
                                    'Error',
                                    'Hubo un problema al eliminar la cita.',
                                    'error'
                                );
                            });
                        }
                    });
                });
            });
        });
    </script>
}